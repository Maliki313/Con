"""
ุงุฎุชุจุงุฑ ุดุงุฑุญ ุงูุณูุงู ุงูุซูุงูู ุงูุฅุณูุงูู
ูุตูุต ุงุฎุชุจุงุฑ ููุชุฃูุฏ ูู ุนูู ุงููุธุงู ุจุดูู ุตุญูุญ
"""

import sys
import os

# ุฅุถุงูุฉ ุงููุณุงุฑ ุงูุญุงูู ูุงุณุชูุฑุงุฏ ุงููุญุฏุงุช
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from islamic_context_explainer import IslamicContextExplainer, ConceptCategory
from session_manager import SessionManager, SessionState

def test_islamic_explainer():
    """ุงุฎุชุจุงุฑ ุฃุณุงุณู ูุดุงุฑุญ ุงูููุงููู ุงูุฅุณูุงููุฉ"""
    print("๐งช ุจุฏุก ุงุฎุชุจุงุฑ ุดุงุฑุญ ุงูููุงููู ุงูุฅุณูุงููุฉ")
    print("=" * 50)
    
    # ุฅูุดุงุก ุดุงุฑุญ
    explainer = IslamicContextExplainer()
    
    # ุงุฎุชุจุงุฑ ุงูุจุญุซ
    print("\n1. ุงุฎุชุจุงุฑ ุงูุจุญุซ:")
    search_queries = ["ุงูุตูุงุฉ", "prayer", "ุชูุญูุฏ", "hajj"]
    
    for query in search_queries:
        results = explainer.search_concepts(query)
        print(f"ุงูุจุญุซ ุนู '{query}': {len(results)} ูุชูุฌุฉ")
        if results:
            print(f"   ุงููุชูุฌุฉ ุงูุฃููู: {results[0]}")
    
    # ุงุฎุชุจุงุฑ ุงูุดุฑุญ
    print("\n2. ุงุฎุชุจุงุฑ ุงูุดุฑุญ:")
    concept_id = "salah"
    explanation = explainer.explain_concept(concept_id, "medium")
    print(f"ุดุฑุญ ููููู '{concept_id}':")
    print(explanation[:200] + "..." if len(explanation) > 200 else explanation)
    
    # ุงุฎุชุจุงุฑ ุงููุงุฆูุฉ ุงูุชูุงุนููุฉ
    print("\n3. ุงุฎุชุจุงุฑ ุงููุงุฆูุฉ ุงูุชูุงุนููุฉ:")
    menu = explainer.get_interactive_menu(concept_id)
    print("ุงููุงุฆูุฉ ุงูุชูุงุนููุฉ:")
    print(menu[:300] + "..." if len(menu) > 300 else menu)
    
    # ุงุฎุชุจุงุฑ ุฌูุงูุจ ุงูููููู
    print("\n4. ุงุฎุชุจุงุฑ ุฌูุงูุจ ุงูููููู:")
    aspects = ["1", "2", "8"]
    for aspect in aspects:
        content = explainer.get_concept_aspect(concept_id, aspect)
        print(f"ุงูุฌุงูุจ {aspect}:")
        print(content[:150] + "..." if len(content) > 150 else content)
        print()
    
    # ุงุฎุชุจุงุฑ ุงูููููู ุงูุนุดูุงุฆู
    print("\n5. ุงุฎุชุจุงุฑ ุงูููููู ุงูุนุดูุงุฆู:")
    random_concept = explainer.get_random_concept()
    print("ููููู ุนุดูุงุฆู:")
    print(random_concept[:200] + "..." if len(random_concept) > 200 else random_concept)
    
    print("\nโ ุงูุชูู ุงุฎุชุจุงุฑ ุดุงุฑุญ ุงูููุงููู ุงูุฅุณูุงููุฉ ุจูุฌุงุญ")

def test_session_manager():
    """ุงุฎุชุจุงุฑ ูุฏูุฑ ุงูุฌูุณุงุช"""
    print("\n๐งช ุจุฏุก ุงุฎุชุจุงุฑ ูุฏูุฑ ุงูุฌูุณุงุช")
    print("=" * 50)
    
    # ุฅูุดุงุก ูุฏูุฑ ุงูุฌูุณุงุช
    manager = SessionManager()
    
    # ุงุฎุชุจุงุฑ ุฅูุดุงุก ุฌูุณุฉ
    print("\n1. ุงุฎุชุจุงุฑ ุฅูุดุงุก ุงูุฌูุณุงุช:")
    user_ids = [12345, 67890, 11111]
    
    for user_id in user_ids:
        session = manager.get_session(user_id)
        print(f"ุฌูุณุฉ ูููุณุชุฎุฏู {user_id}: {session.state.value}")
        session.set_context("test_key", f"test_value_{user_id}")
    
    # ุงุฎุชุจุงุฑ ุฅุญุตุงุฆูุงุช ุงูุฌูุณุงุช
    print("\n2. ุงุฎุชุจุงุฑ ุงูุฅุญุตุงุฆูุงุช:")
    stats = manager.get_session_stats()
    print(f"ุนุฏุฏ ุงูุฌูุณุงุช ุงููุดุทุฉ: {stats['total_active']}")
    print(f"ุชูุฒูุน ุงูุญุงูุงุช: {stats['states_distribution']}")
    
    # ุงุฎุชุจุงุฑ ุณูุงู ุงููุญุงุฏุซุฉ
    print("\n3. ุงุฎุชุจุงุฑ ุงูุณูุงู:")
    session = manager.get_session(12345)
    session.state = SessionState.EXPLORING_CONCEPT
    session.set_context("current_concept", "salah")
    session.add_to_history("user_message", "ุงุฎุชุจุงุฑ ุงูุฑุณุงูุฉ")
    
    print(f"ุญุงูุฉ ุงูุฌูุณุฉ: {session.state.value}")
    print(f"ุงูุณูุงู: {session.get_context('current_concept')}")
    print(f"ุทูู ุงูุชุงุฑูุฎ: {len(session.conversation_history)}")
    
    # ุงุฎุชุจุงุฑ ูุณุญ ุงูุฌูุณุฉ
    print("\n4. ุงุฎุชุจุงุฑ ูุณุญ ุงูุฌูุณุฉ:")
    manager.clear_session(12345)
    cleared_session = manager.get_session(12345)
    print(f"ุญุงูุฉ ุงูุฌูุณุฉ ุจุนุฏ ุงููุณุญ: {cleared_session.state.value}")
    print(f"ุงูุณูุงู ุจุนุฏ ุงููุณุญ: {len(cleared_session.context)}")
    
    print("\nโ ุงูุชูู ุงุฎุชุจุงุฑ ูุฏูุฑ ุงูุฌูุณุงุช ุจูุฌุงุญ")

def test_integration():
    """ุงุฎุชุจุงุฑ ุงูุชูุงูู ุจูู ุงูููููุงุช"""
    print("\n๐งช ุจุฏุก ุงุฎุชุจุงุฑ ุงูุชูุงูู")
    print("=" * 50)
    
    explainer = IslamicContextExplainer()
    manager = SessionManager()
    
    # ูุญุงูุงุฉ ุชูุงุนู ูุณุชุฎุฏู
    user_id = 99999
    session = manager.get_session(user_id)
    
    # ุงูุจุญุซ ุนู ููููู
    query = "ุงูุตูุงุฉ"
    results = explainer.search_concepts(query)
    
    if results:
        concept_id = results[0]
        print(f"1. ุชู ุงูุนุซูุฑ ุนูู ุงูููููู: {concept_id}")
        
        # ุชุนููู ุญุงูุฉ ุงูุงุณุชูุดุงู
        session.state = SessionState.EXPLORING_CONCEPT
        session.set_context("current_concept", concept_id)
        session.add_to_history("search", query)
        
        # ุนุฑุถ ุงููุงุฆูุฉ ุงูุชูุงุนููุฉ
        menu = explainer.get_interactive_menu(concept_id)
        print("2. ุชู ุนุฑุถ ุงููุงุฆูุฉ ุงูุชูุงุนููุฉ")
        
        # ูุญุงูุงุฉ ุงุฎุชูุงุฑ ุงููุณุชุฎุฏู
        choice = "1"
        aspect_content = explainer.get_concept_aspect(concept_id, choice)
        session.add_to_history("choice", choice)
        print(f"3. ุชู ุนุฑุถ ุงูุฌุงูุจ {choice}")
        
        # ุนุฑุถ ุงูุงูุชุฑุงุญุงุช
        suggestions = explainer.suggest_related_concepts(concept_id)
        print("4. ุชู ุนุฑุถ ุงูุงูุชุฑุงุญุงุช")
        
        # ุฅุญุตุงุฆูุงุช ููุงุฆูุฉ
        stats = manager.get_session_stats()
        print(f"5. ุฅุญุตุงุฆูุงุช ููุงุฆูุฉ: {stats['total_active']} ุฌูุณุฉ ูุดุทุฉ")
        
        print("\nโ ุงุฎุชุจุงุฑ ุงูุชูุงูู ููุชูู ุจูุฌุงุญ")
    else:
        print("โ ูุดู ูู ุงูุนุซูุฑ ุนูู ุงูููููู")

if __name__ == "__main__":
    try:
        test_islamic_explainer()
        test_session_manager()
        test_integration()
        print("\n๐ ุฌููุน ุงูุงุฎุชุจุงุฑุงุช ุงูุชููุช ุจูุฌุงุญ!")
        
    except Exception as e:
        print(f"\nโ ูุดู ูู ุงูุงุฎุชุจุงุฑ: {e}")
        import traceback
        traceback.print_exc()